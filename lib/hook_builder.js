// Generated by CoffeeScript 1.11.1
(function() {
  var ResolveContext, getLocals, getStateHookBuilder;

  ResolveContext = require('ui-router-core').ResolveContext;

  getLocals = function(resolveContext) {
    var i, key, len, resolvable, tokens, tuples, waitPolicy;
    tokens = _.filter(resolveContext.getTokens(), function(token) {
      return typeof token === 'string';
    });
    tuples = {};
    for (i = 0, len = tokens.length; i < len; i++) {
      key = tokens[i];
      resolvable = resolveContext.getResolvable(key);
      waitPolicy = resolveContext.getPolicy(resolvable).async;
      tuples[key] = waitPolicy === 'NOWAIT' ? resolvable.promise : resolvable.data;
    }
    return tuples;
  };

  module.exports = getStateHookBuilder = function(hookName) {
    return function(state, parentFn) {
      var decoratedHook, hook, pathname;
      hook = state[hookName];
      pathname = hookName === 'onExit' ? 'from' : 'to';
      decoratedHook = function(transition, state) {
        var locals, resolveContext;
        resolveContext = new ResolveContext(transition.treeChanges(pathname));
        locals = getLocals(resolveContext);
        return hook(transition, state, locals);
      };
      if (hook != null) {
        return decoratedHook;
      }
    };
  };

}).call(this);
