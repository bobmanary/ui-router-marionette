// Generated by CoffeeScript 1.10.0
(function() {
  var MnViewConfig, Resolvable, ResolveContext, ViewService, hasAnyKey, ref, services, viewConfigId;

  ref = require('ui-router-core'), services = ref.services, ViewService = ref.ViewService, ResolveContext = ref.ResolveContext, Resolvable = ref.Resolvable;

  viewConfigId = 0;

  hasAnyKey = function(keys, obj) {
    return _.reduce(keys, (function(memo, key) {
      return memo || (obj[key] != null);
    }), false);
  };

  exports.mnViewsBuilder = function(state) {
    var keys, views, viewsObject;
    if (!state.parent) {
      return;
    }
    keys = ['view', 'controller'];
    views = {};
    viewsObject = state.views || {
      $default: _.pick(state, keys)
    };
    _.each(viewsObject, function(config, name) {
      var normalized;
      name = name || '$default';
      config.resolveAs = config.resolveAs || '$resolve';
      config.$type = 'backbone';
      config.$context = state;
      config.$name = name;
      normalized = ViewService.normalizeUIViewTarget(config.$context, config.$name);
      config.$uiViewName = normalized.uiViewName;
      config.$uiViewContextAnchor = normalized.uiViewContextAnchor;
      return views[name] = config;
    });
    return views;
  };

  exports.MnViewConfig = MnViewConfig = (function() {
    function MnViewConfig(path, viewDecl) {
      this.path = path;
      this.viewDecl = viewDecl;
      this.loaded = true;
      this.$id = viewConfigId++;
    }

    MnViewConfig.prototype.load = function() {
      return services.$q.when(this);
    };

    return MnViewConfig;

  })();

}).call(this);
